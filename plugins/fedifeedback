# Blosxom Plugin: fedifeedback
# Author(s): Barijaona Ramaholimihaso
# Version: 2024-12-24blosxom2
# Documentation: See the bottom of this file or type: perldoc fedifeedback

package fedifeedback;

use strict;

# configurable texts
# use $fedifeedback::shortlink and $fedifeedback::explainedlink in flavour templates
use vars
  qw($shortlink_text $explained_header $explanation $shortlink $explainedlink $statsandcomments);

# Uncomment next line to enable debug output (don't uncomment debug() lines)
#use Blosxom::Debug debug_level => 1;

# --- Configurable variables (can be set here or through the 'prefs' or 'config' plugins) -----

# text of the shortlink
$shortlink_text = "React and comment" unless defined $shortlink_text;

# header of explained link
$explained_header = "<h4>React and comment</h4>"
  unless defined $explained_header;

# explanation for explained link
$explanation =
"With a Mastodon or Fediverse account, you can reply to this post. Since the Fediverse is a decentralized system, you can respond using your existing account hosted by a Mastodon server or compatible platform, from the following link or by pasting it into the search bar of your application: "
  unless defined $explained_header;

# --------------------------------

sub start {
    1;
}

# Return the first existing metadata item key and value given a list of keys
sub _get_meta {
    for my $attr (@_) {
        my $meta_attr = $attr;
        $meta_attr =~ s/-/_/g;
        my $value = $blosxom::meta{$meta_attr};
        $value = eval "\$meta::$attr" unless defined $value;
        return wantarray ? ( $attr, $value ) : $value if defined $value;
    }
    return wantarray ? () : undef;
}

sub story {
    my ( $pkg, $path, $filename, $story_ref, $title_ref, $body_ref ) = @_;

    my $toot_url = _get_meta('feedback');

    # debug(1, "toot_url: $toot_url");
    if ( $toot_url ne "" ) {
        $shortlink =
            "<a class=\"ffb-link\" href=\""
          . $toot_url . "\">"
          . $shortlink_text . "</a>";
        $explainedlink =
            $explained_header
          . "<p class=\"ffb-explanation\">"
          . $explanation
          . "<a href=\""
          . $toot_url
          . "\" title=\""
          . $shortlink_text . "\">"
          . $toot_url
          . "</a></p>";
        $statsandcomments =
            "<div id=\"ffb-stats\"></div>"
          . $explainedlink
          . "<ffb-comments feedback=\""
          . $toot_url
          . "\"></ffb-comments>";
    }
    else {
        $shortlink        = "";
        $explainedlink    = "";
        $statsandcomments = "";
    }

    1;
}

1;

__END__

=encoding UTF-8

=head1 NAME

Blosxom Plug-in: fedifeedback

=head1 DESCRIPTION

Purpose: Populates the $fedifeedback namespace with some HTML:
- to link to a “toot”, which will serve as an “anchor” for a comment thread, OR
- to display the comment thread itself.

The above mentioned “toot” may link to the article itself, enabling a close integration
between the Fediverse and the articles of your website, even if the website is statically
generated and served.

=head2 GENERATED VARIABLES

=over 4

=item $fedifeedback::shortlink

A short text with an HTML link to the Mastodon or Fediverse post.

=item $fedifeedback::explainedlink

A longer explanation of the integration between your site and the Fediverse,
followed by an HTML link to the Fediverse post, and preceded by an (optional)
HTML header.

=item $fedifeedback::statsandcomments

A dynamically generated rendering of the comment thread, with icons indicating the
numbers of replies, boosts and favorites. As only one rendering is possible per webpage,
this is mostly useful for pages of individual articles.

=back

=head1 REQUIREMENT AND DEPENDENCIES

=head2 REQUIRED PLUGIN

A plugin (typically either L<meta> or L<metamail>) designed for handling metadata is
required, to allow us to store and retrieve the URL of a post which will serve as an
anchor for visitor's comments.

fedifeedback should be loaded after this plugin.

=head2 REQUIRED METADATA INFO IN ARTICLES

=over 4

=item Feedback

An URL pointing to a Mastodon or Fediverse post which will serve as an anchor
for visitor's comments.

=back

=head3 EXAMPLE

=over 2

If using the L<meta> plugin:

  Title of my random blog post
  meta-feedback: https://mastodon.example.org/@barijaona/113500538860688431

If using the L<metamail> plugin:

  Title of my random blog post
  Feedback: https://mastodon.example.org/@barijaona/113500538860688431

=back

=head2 ADDITIONAL REQUIREMENTS FOR $fedifeedback::statsandcomments

If you want the dynamic rendering allowed by B<$fedifeedback::statsandcomments>,
you will need to have links to the Javascript file F<fedifeedback.js> and the
CSS stylesheet F<fedifeedback.css> in the <HEAD> of your webpage.
These are not necessary if you only use $fedifeedback::shortlink and/or $fedifeedback::explainedlink

=head1 USAGE

Once the plugin is integrated, you will change your publication workflow as
follows:

=over 4

1/ you will publish your blog post, without Fediverse discussion enabled
yet (no toot ID).

2/ you will write a post on Mastodon (or any similar system supporting
the Mastodon API like GoToSocial, PixelFed, Pleroma, Friendica, Iceshrimp, Sharkey…).
This post (“toot”) should link to your blog post, and be designed to provide
increased visibility to it. It will allow users to easily share and engage with
your content, as they can simply “boost” (similar to retweet) your toots to
share them with their followers.

3/ grab the “toot” URL and change your blog post to include it.

4/ republish the website.

=back

=head1 SECURITY CONSIDERATIONS

Only public posts will be displayed by $fedifeedback::statsandcomments.

The Javascript integrates a function which escapes any and all HTML from a string,
which is used for any user supplied content returned from the API where we are not
sure whether Mastodon sanitises it.

It is also possible to handle an extra layer of sanitization by including DOMPurify
in the <HEAD> of your pages.
Relevant code can be found at L<https://cdnjs.com/libraries/dompurify>.

=head1 ENVIRONMENTAL AND SOCIAL CONSIDERATIONS

While $fedifeedback::shortlink and $fedifeedback::explainedlink can be statically
rendered by this plugin, each dynamic rendering performed by $fedifeedback::statsandcomments
will require at least 4 additional HTTP requests (2 to the server hosting the resources used
by your webpage, 2 to the server hosting your fediverse account).

If your site generates a lot of web traffic and comments, it's a good idea to be moderate
on the use of this feature enabling instant and updated display of all comments.

=head1 VERSION HISTORY

=over 4

=item 2024-12-24

Simplify Javascript

=item 2024-12-07

Add dynamically rendered $fedifeedback::statsandcomments

Change again CSS style class names.

=item 2024-11-30

Allow configurable variables texts to be translated / customized through plugins like
L<prefs> or L<config>.

Change CSS style class names to `ffb_link` and `ffb_description`.

=item 2024-11-24

Preliminary release

=back

=head1 AUTHOR

Barijaona Ramaholimihaso L<https://blog.barijaona.com> or L<https://mastodon.mg/@barijaona>
or L<https://github.com/barijaona>

=head1 SEE ALSO

Blosxom Home/Docs/Licensing: L<https://blosxom.sourceforge.net>

Blosxom Repository : L<https://sourceforge.net/p/blosxom/blosxom/>

Author's plugins in Blosxom Plugins Repository:
L<https://sourceforge.net/p/blosxom/blosxom-plugins/ci/master/tree/barijaona/>

=head1 BUGS

Address bug reports and comments to the author.

=head1 LICENSE

Copyright 2024, Barijaona Ramaholimihaso

This plugin is licensed under the same terms as blosxom itself i.e.

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the "Software"),
to deal in the Software without restriction, including without limitation
the rights to use, copy, modify, merge, publish, distribute, sublicense,
and/or sell copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included
in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
