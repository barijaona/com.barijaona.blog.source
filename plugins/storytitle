# Blosxom plugin: storytitle
# Author(s): Struan Donald <code@exo.org.uk>
# Version: 0.7
# Documentation: see bottom of file or perldoc title

package storytitle;

use strict;
use vars
  qw($add_blogtitle_to_indexes $add_blogtitle_to_story $prevent_hanging_sep $sep $right $right_sep $left_sep $page_title $page_title_left $page_title_right);

# ------------------ Config variables ---------------------

# do we include the blog title for index pages (chrono & main page)
$add_blogtitle_to_indexes = 0 unless defined $add_blogtitle_to_indexes;

# do we include the blog title to individual stories
$add_blogtitle_to_story = 0 unless defined $add_blogtitle_to_story;

# do we prevent hanging separators ?
# ( 0 maintains compatibility with versions prior to 0.7 ;
#   1 recommended when we want to include the blog title set by Blosxom)
$prevent_hanging_sep = 0 unless defined $prevent_hanging_sep;

# default seperator to add to story title
$sep = ' : ' unless defined $sep;

# do we default to the right aligned title
# 1 for right aligned, 0 for left
$right = 0 unless defined $right;

# seperator for right aligned title
$right_sep = '' || $sep unless defined $right_sep;

# seperator for left aligned title
$left_sep = '' || $sep unless defined $left_sep;

# ------ Output variables  --------------------------------
$page_title;
$page_title_left;
$page_title_right;

# ---------------------------------------------------------

# Uncomment next line to enable debug output (don't uncomment debug() lines)
#use Blosxom::Debug debug_level => 1;

sub start { 1; }

sub head {
    my ( $p, $dir, $head ) = @_;
    my $title;
    my $story = 0;
    if ( !$dir ) {
        $title =
            ( defined $blosxom::path_info_da ? "$blosxom::path_info_da/" : "" )
          . ( defined $blosxom::path_info_mo ? "$blosxom::path_info_mo/" : "" )
          . "$blosxom::path_info_yr";

        # debug(1, "Chrono or main page : title $title");
    }
    elsif ( $dir =~ m#(.*?)/?([\-\.\w]+)\.(\w+)$# and $2 ne 'index' ) {
        my $file =
          join( '/', $blosxom::datadir, $1, "$2.$blosxom::file_extension" );
        my $fh = new FileHandle;
        if ( -f "$file" && $fh->open("< $file") ) {
            chomp( $title = <$fh> );
            $fh->close;
        }
        $story = 1;

        # debug(1, "Story : title $title");
    }
    if ( defined $title and $title =~ /\S/ ) {

        # debug(1, "Defined title");
        my $add_blogtitle = ( $story && $add_blogtitle_to_story )
          || ( !$story && $add_blogtitle_to_indexes );
        my $include_separator = $add_blogtitle || !$prevent_hanging_sep;
        $page_title_right =
            ( $add_blogtitle     ? $blosxom::blog_title : "" )
          . ( $include_separator ? $right_sep           : "" )
          . $title;
        $page_title_left =
            $title
          . ( $include_separator ? $left_sep            : "" )
          . ( $add_blogtitle     ? $blosxom::blog_title : "" );
    }
    else {
        # debug(1, "Other page…");
        $page_title_right = $page_title_left = ( $prevent_hanging_sep
              || $add_blogtitle_to_indexes ? $blosxom::blog_title : undef );
    }
    $page_title = $right ? $page_title_right : $page_title_left;
}

1;

__END__

=encoding UTF-8

=head1 NAME

Blosxom Plug-in: storytitle

=head1 SYNOPSIS

Allows you to include the story title in the page header for individually views blosxom stories.

=head2 QUICK START

Put title in your plug-ins directory.

If required change the $sep variable. This controls the seperator that goes at the start of the story title. E.g. if $sep is ' : ' and the story title is 'A blosxom entry' then the plugin will return ' : A blosxom entry'.

Now all individually displayed stories can have their title in the pages title tag, or anywhere else in the page header you want. Just place $storytitle::page_title where you want to display the story title.

=head2 LEFT AND RIGHT ALIGNED TITLES

If you have a need for a left aligned title (i.e. you want to have 'story title : somethign else') then you can use either $storytitle::page_title_left or set the value of $right in the configuration to 0. In that case $storytitle::page_title will have the seperator at the left.

You can also individually configure the left and right sided seperators with the left_sep and right_sep configuration options. $storytitle::page_title_left and $storytitle::page_title_right will access the left and right sided titles.

=head1 VERSION

0.7

=head2 CHANGES

0.7 - Allow inclusion of Blosxom blog title into output (can be configured
      through new variables $add_blogtitle_to_indexes, $add_blogtitle_to_story
      and $prevent_hanging_sep)
      Add debugging code based on <https://metacpan.org/pod/Blosxom::Debug>

0.6 - Now uses the users file extension setting rather than always .txt

0.5 - deals with filenames with like foo.bar.txt and foo-bar.txt (thanks to
      Antti Vähä-Sipilä for pointing this out)
      catches titles containing only white space.

0.4 - bugfix to stop title values hanging around under static generation

0.3 - fixed left_title to actually be a left title

0.2 - introduced left and right options

=head1 AUTHOR

Struan Donald <https://exo.org.uk/code/>

=head2 CREDITS

Lim Chee Aun <http://phoenity.com/> for the left/right sided titles idea.

Anthony DeLorenzo <anthony.delorenzo@gmail.com> for fix to make it use the users file extension setting.

Barijaona Ramaholimihaso <https://sourceforge.net/u/barijaona/profile/> for optional inclusion of Blosxom's
blog title.

=head1 SEE ALSO

Blosxom Home/Docs/Licensing: https://blosxom.sourceforge.net/

Blosxom Plugin Docs: https://blosxom.sourceforge.net/documentation/users/plugins.html

=head1 BUGS

None known; please send bug reports and feedback to the Blosxom
development mailing list <blosxom-devel@lists.sourceforge.net>.

=head1 COPYRIGHT

Copyright (C) 2003-2025 Struan Donald and contributors.

This program is free software; you can redistribute
it and/or modify it under the same terms as Perl itself.

=cut
